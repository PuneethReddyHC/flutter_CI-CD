name: Flutter CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.0'
        channel: 'stable'
    - run: flutter pub get
    - run: flutter test

  build_android:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.0'
        channel: 'stable'
    - run: flutter pub get
    - name: Decode Android keystore
      run: |
        echo ${{ secrets.SIGNING_KEY }} | base64 -d > android/app/keystore.jks
    - name: Create key.properties
      run: |
        echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" >> android/key.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.ALIAS }}" >> android/key.properties
        echo "storeFile=keystore.jks" >> android/key.properties
    - name: Build Android App Bundle
      run: flutter build appbundle
    - uses: actions/upload-artifact@v3
      with:
        name: release-aab
        path: build/app/outputs/bundle/release/app-release.aab

  build_ios:
    needs: build
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.0'
        channel: 'stable'
    - run: flutter pub get
    - run: flutter build ios --release --no-codesign
    - uses: actions/upload-artifact@v3
      with:
        name: release-ios
        path: build/ios/iphoneos

  # deploy_android:
  #   needs: build_android
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/download-artifact@v3
  #     with:
  #       name: release-aab
  #   - uses: r0adkll/upload-google-play@v1
  #     with:
  #       serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
  #       packageName: com.yourdomain.yourapp
  #       releaseFiles: app-release.aab
  #       track: production
  #       status: completed

  # # For iOS, you would typically use fastlane or a similar tool for deployment
  # # This step is a placeholder and would need to be customized based on your iOS deployment process
  # deploy_ios:
  #   needs: build_ios
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/download-artifact@v3
  #     with:
  #       name: release-ios
  #   - name: Deploy to App Store
  #     run: echo "Deploy to App Store Connect would go here"
      # You would typically use fastlane or a similar tool here